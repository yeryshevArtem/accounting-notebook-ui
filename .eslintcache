[{"D:\\Projects\\accounting-notebook-ui\\src\\index.js":"1","D:\\Projects\\accounting-notebook-ui\\src\\App.js":"2","D:\\Projects\\accounting-notebook-ui\\src\\reportWebVitals.js":"3","D:\\Projects\\accounting-notebook-ui\\src\\transactionsItem.js":"4","D:\\Projects\\accounting-notebook-ui\\src\\TransactionsList.js":"5","D:\\Projects\\accounting-notebook-ui\\src\\TransactionsItem.js":"6","D:\\Projects\\accounting-notebook-ui\\src\\config.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":222,"mtime":1610977564640,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1030,"mtime":1610972811866,"results":"12","hashOfConfig":"9"},{"size":1719,"mtime":1610983489241,"results":"13","hashOfConfig":"9"},{"size":1869,"mtime":1610978126441,"results":"14","hashOfConfig":"9"},{"size":51,"mtime":1610981610522,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cza1x1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\accounting-notebook-ui\\src\\index.js",[],["32","33"],"D:\\Projects\\accounting-notebook-ui\\src\\App.js",[],"D:\\Projects\\accounting-notebook-ui\\src\\reportWebVitals.js",[],"D:\\Projects\\accounting-notebook-ui\\src\\transactionsItem.js",[],"D:\\Projects\\accounting-notebook-ui\\src\\TransactionsList.js",["34"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { ListGroup, Spinner, Alert } from 'react-bootstrap';\r\nimport TransactionsItem from './TransactionsItem';\r\nimport { DOMAIN_NAME} from './config';\r\n\r\nconst useStyles = createUseStyles({\r\n    listGroupCustom: {\r\n        margin: '10px 0'\r\n    }\r\n  });\r\n\r\n\r\nfunction TransactionsList() {\r\n    const classes = useStyles();\r\n    const [history, setHistory] = useState([]);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const result = await axios.get(`${DOMAIN_NAME}/api/transactions-history`);\r\n            setHistory(result.data);\r\n            setLoading(false);\r\n            setError(null);\r\n        } catch(error) {\r\n            setLoading(false);\r\n            setError(error);\r\n        }\r\n    }, []);\r\n    if (!history.length && !isLoading && !error) {\r\n        return  (\r\n            <Alert variant=\"light\">\r\n                 Is empty.\r\n            </Alert>\r\n        );\r\n    }\r\n    if (error && !isLoading) {\r\n        return  (\r\n            <Alert variant=\"danger\">\r\n                 Unexpected error.\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    return isLoading ? <Spinner animation=\"border\" role=\"status\"><span className=\"sr-only\">Loading...</span></Spinner> : history.map((transaction) => {\r\n        return (        \r\n            <ListGroup key={transaction.id} className={classes.listGroupCustom}>\r\n                <TransactionsItem data={transaction} />\r\n            </ListGroup>\r\n        );\r\n    })\r\n}\r\n\r\nexport default TransactionsList;","D:\\Projects\\accounting-notebook-ui\\src\\TransactionsItem.js",[],"D:\\Projects\\accounting-notebook-ui\\src\\config.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":20,"column":15,"nodeType":"41","endLine":31,"endColumn":6},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]